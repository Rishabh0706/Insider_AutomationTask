<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="noi-rishabhrastogi-mac.local" failures="0" tests="1" name="Default test" time="0.144" errors="0" timestamp="2020-07-30T19:00:31 IST">
  <testcase classname="com.insider.qa.appTestCases.EventScreenTest" name="@BeforeTest startServer" time="0.105">
    <failure type="io.appium.java_client.service.local.InvalidServerInstanceException" message="The main Appium script does not exist at &amp;apos;/Users/rishabhrastogi/Documents/Java_Practice/InsiderAssignment/appium/build/lib/main.js&amp;apos;">
      <![CDATA[io.appium.java_client.service.local.InvalidServerInstanceException: The main Appium script does not exist at '/Users/rishabhrastogi/Documents/Java_Practice/InsiderAssignment/appium/build/lib/main.js'
at io.appium.java_client.service.local.AppiumServiceBuilder.findMainScript(AppiumServiceBuilder.java:161)
at io.appium.java_client.service.local.AppiumServiceBuilder.loadPathToMainScript(AppiumServiceBuilder.java:300)
at io.appium.java_client.service.local.AppiumServiceBuilder.createArgs(AppiumServiceBuilder.java:381)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:358)
at io.appium.java_client.service.local.AppiumDriverLocalService.buildService(AppiumDriverLocalService.java:87)
at com.insider.qa.appTestCases.EventScreenTest.startServer(EventScreenTest.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:63)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:348)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.TestRunner.invokeTestConfigurations(TestRunner.java:619)
at org.testng.TestRunner.beforeRun(TestRunner.java:609)
at org.testng.TestRunner.run(TestRunner.java:580)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeTest startServer -->
  <testcase classname="com.insider.qa.appTestCases.EventScreenTest" name="@BeforeMethod setup" time="-1.596115831064E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setup -->
  <testcase classname="com.insider.qa.appTestCases.EventScreenTest" name="@AfterMethod clean" time="-1.596115831069E9">
    <skipped/>
  </testcase> <!-- @AfterMethod clean -->
  <testcase classname="com.insider.qa.appTestCases.EventScreenTest" name="TC01" time="0.0">
    <skipped/>
  </testcase> <!-- TC01 -->
</testsuite> <!-- Default test -->
